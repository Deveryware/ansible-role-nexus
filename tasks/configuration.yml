---
- name: User - Create .bashrc
  stat: path="{{ nexus_home_dir }}/.bashrc"
  register: user_bashrc

- name: User - Create .bashrc
  copy:
    src: '/etc/skel/.bashrc'
    dest: "{{ nexus_home_dir }}/.bashrc"
    remote_src: yes
  when: user_bashrc.stat.exists == false

- name: User - NEXUS_HOME
  lineinfile:
    dest: "{{ nexus_home_dir }}/.bashrc"
    regexp: "^NEXUS_HOME="
    line: "NEXUS_HOME={{ nexus_home_dir }}"

- name: User - Uncomment run_as_user
  lineinfile:
    dest: "{{ nexus_home_dir }}/bin/nexus.rc"
    regexp: "^#run_as_user="
    line: "run_as_user={{ nexus_user }}"

- name: User - Set run_as_user
  lineinfile:
    dest: "{{ nexus_home_dir }}/bin/nexus.rc"
    regexp: "^run_as_user="
    line: "run_as_user={{ nexus_user }}"

- name: Configuration - Uncomment INSTALL4J_JAVA_HOME_OVERRIDE
  lineinfile:
    dest: "{{ nexus_home_dir }}/bin/nexus"
    regexp: "^# INSTALL4J_JAVA_HOME_OVERRIDE="
    line: "INSTALL4J_JAVA_HOME_OVERRIDE=/usr/lib/jvm/java-8-oracle"

- name: Configuration - Set INSTALL4J_JAVA_HOME_OVERRIDE
  lineinfile:
    dest: "{{ nexus_home_dir }}/bin/nexus"
    regexp: "^INSTALL4J_JAVA_HOME_OVERRIDE="
    line: "INSTALL4J_JAVA_HOME_OVERRIDE=/usr/lib/jvm/java-8-oracle"

- name: Configuration - nexus-context-path.
  lineinfile:
    dest: "{{ nexus_home_dir }}/etc/nexus-default.properties"
    regexp: "^nexus-context-path="
    line: "nexus-context-path={{ nexus_context_path }}"

- name: Ensure nexus user is owner of nexus directory.
  file:
    path: "{{ installed_dir.files[0].path }}"
    owner: "{{ nexus_user }}"
    group: "{{ nexus_group }}"
    recurse: yes

- name: Check sonatype-work.
  stat: path="{{ nexus_install_dir }}/sonatype-work"
  register: sonatype_work

- name: Ensure nexus user is owner of sonatype-work.
  file:
    path: "{{ nexus_install_dir }}/sonatype-work"
    owner: "{{ nexus_user }}"
    group: "{{ nexus_group }}"
    recurse: yes
  when: sonatype_work.stat.exists